swagger: "2.0"
info:
  description: "."
  version: "0.1.0"
  title: "Fusion Creator API"
basePath: "/v1"
schemes:
- "http"
- "https"
paths:
  /service:
    get:
      tags:
      - "service"
      summary: "Retrieve the list of services with the description."
      description: "Should include "
      operationId: "listService"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        405:
          description: "Invalid input"
        200:
          description: "A list of Services."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceDesc"
    
  /application:
    get:
      tags:
      - "application"
      summary: "Retrieve the deployed applications"
      description: "Should include "
      operationId: "listApp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        405:
          description: "Invalid input"
        200:
          description: "A list of Applications."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ApplicationStatus"
    post:
      tags:
      - "application"
      summary: "Create an application"
      description: "Should include "
      operationId: "createApp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        405:
          description: "Invalid input"
      parameters:
        - in: body
          name: application
          description: The application to create.
          schema:
            $ref: "#/definitions/ApplicationCreation" 
  /application/{appId}:
    get:
      tags:
      - "application"
      summary: "Get an application."
      description: ""
      operationId: "getApp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        405:
          description: "Invalid input"
        200:
          description: "An Application."
          schema:
            $ref: "#/definitions/ApplicationStatus"
      parameters:
        - in: path
          name: appId
          type: string
          required: true
          description: ID of the app to update
          
    put:
      tags:
      - "application"
      summary: "Update an application"
      description: ""
      operationId: "updateApp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        405:
          description: "Invalid input"
      parameters:
        - in: path
          name: appId
          type: string
          required: true
          description: ID of the app to update
        - in: body
          name: application
          description: The application to create.
          schema:
            $ref: "#/definitions/ApplicationCreation" 
    delete:
      tags:
      - "application"
      summary: "Delete an application"
      description: ""
      operationId: "deleteApp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        405:
          description: "Invalid input"
        200:
          description: "OK"
      parameters:
        - in: path
          name: appId
          type: string
          required: true
          description: ID of the app to update
  /application/{appId}/service:
    post:
      tags:
      - "application"
      summary: "Add a service"
      description: ""
      operationId: "addServiceApp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        405:
          description: "Invalid input"
      parameters:
        - in: path
          name: appId
          type: string
          required: true
          description: ID of the app to update
        - in: body
          name: service
          description: The service to add.
          schema:
            $ref: "#/definitions/ServiceName" 
          
              
    get:
      tags:
      - "application"
      summary: "Get the services of an Application"
      description: ""
      operationId: "getAppServices"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        405:
          description: "Invalid input"
        200:
          description: "A list of Services."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceStatus"
      parameters:
        - in: path
          name: appId
          type: string
          required: true
          description: ID of the app to update
      
  /application/{appId}/service/{serviceId}:
    delete:
      tags:
      - "application"
      summary: "Delete a service of an application"
      description: ""
      operationId: "deleteAppService"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        405:
          description: "Invalid input"
      parameters:
        - in: path
          name: appId
          type: string
          required: true
          description: ID of the app to update
        - in: path
          name: serviceId
          type: string
          required: true
          description: ID of the app to update
    get:
      tags:
      - "application"
      summary: "Get the deployment status of a service of an application"
      description: ""
      operationId: "getAppServiceStatus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        405:
          description: "Invalid input"
        200:
          description: "Statius of the service."
          schema:
            $ref: "#/definitions/ServiceStatus"  
      parameters:
        - in: path
          name: appId
          type: string
          required: true
          description: ID of the app to update
        - in: path
          name: serviceId
          type: string
          required: true
          description: ID of the app to update  
  

      
    
     
definitions:
  ApplicationCreation:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "string"
        example: "Application id"
      name:
        type: "string"
        example: "Trainer Trading"
      services:
        type: "array"
        items:
          $ref: '#/definitions/ServiceName'
          
  ApplicationStatus:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "string"
        example: "Application id"
      name:
        type: "string"
        example: "Trainer Trading"
      services:
        type: "array"
        items:
          $ref: '#/definitions/ServiceStatus'
  Service:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "ffdc/reporting"
        description: "The name of the service (required)"
      version:
        type: "string"
        example: "0.1.0"
        description: "A SemVer 2 version"
  ServiceDesc:
    allOf:
      - $ref: '#/definitions/Service' # Cat has all properties of a Pet
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "ffdc/reporting"
        description: "The name of the service (required)"
      version:
        type: "string"
        example: "0.1.0"
        description: "A SemVer 2 version"
      description:
        type: "string"
        example: "The service create a report back server."
        description: "A single-sentence description of this service"
      keywords:
        type: "array"
        items:
          type: "string"
        example: "[front,transient,...]"
      home:
        type: "string"
        example: "http://k8s.io"
      icon:
        type: "string"
        example: "http://k8s.io/logo.png"
      deprecated:
        type: "boolean"
        example: "false"
      outboundLinkName:
        type: "array"
        items:
          type: "string"
        example: "[reporting,reportingback]"
        description: "Name of the external service deployed. Used to make link."    
  ServiceStatus:
      allOf:
      - $ref: '#/definitions/Service' # Cat has all properties of a Pet
      type: "object"
      required:
      - "name"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
          example: "ffdc/reporting"
          description: "The name of the service (required)"
        status:
          type: "string"
          example: "Started"
        errors:
          type: "array"
          items:
            type: "string"
        urls:
          type: "array"
          items:
            $ref: '#/definitions/NamedLink' 
        
        
  NamedLink:    
      type: "object"
      required:
      - "name"
      properties:
        name:
          type: "string"
          example: "reporting"
          description: "The name of the service."
        url:
          type: "string"
          example: "http://reporting"
          description: "Url of the service."

  ServiceName:    
      type: "object"
      required:
      - "name"
      properties:
        name:
          type: "string"
          example: "reporting"
          description: "The name of the service."
        version:
          type: "string"
          description: "Version of the service."
      
        


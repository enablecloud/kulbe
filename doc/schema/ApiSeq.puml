@startuml

' color to use
' #FFB05A
' #FFB05A
' #D5E821
' #31FFB4
' #514BEF
skinparam handwritten true

skinparam interface {
  backgroundColor RosyBrown
  borderColor orange
}

skinparam object {
	ArrowColor DeepSkyBlue
	ActorBorderColor DeepSkyBlue
    BackgroundColor<<Apache>> Red
    BorderColor<<Apache>> #FF6655
    FontName Courier
    BackgroundColor <<Blue>> DeepSkyBlue
    BorderColor black
    BackgroundColor gold
    ArrowFontName Impact
    ArrowColor #996655
    ArrowFontColor #777777

}

header
<font color=red>Warning:</font>
Draft
endheader
center footer Controller

actor Admin

== List Services ==
Admin -> ApiManagement : List Services
ApiManagement -> HelmRepo : Get and filter on keywords
note right
    Filter on workspace, namespace,...
end note
ApiManagement -> Admin : Formated and Filtered list

== Create Application ==
Admin -> ApiManagement : Create application
ApiManagement -> Kubernetes : Create Application Object
ApiManagement <- Kubernetes
ApiManagement -> Kubernetes : Get Status of the Application
ApiManagement <- Kubernetes
ApiManagement -> Admin : Return startup status
== Get status and available services(urls) of an Application ==
Admin -> ApiManagement : Get Application Status
ApiManagement -> Kubernetes : Get the Application Object and get status
ApiManagement <- Kubernetes
ApiManagement -> Admin : Return Current status
== Add service to an application ==
Admin -> ApiManagement : Add a service to an Application
ApiManagement -> Kubernetes : Get the Application Object
ApiManagement <- Kubernetes
ApiManagement -> Kubernetes : Update the Application Object
ApiManagement <- Kubernetes
ApiManagement -> Kubernetes : Get current of the Application
ApiManagement <- Kubernetes
ApiManagement -> Admin : Return startup status
== Package an existing Application (large: need data from services) ==
Admin -> ApiManagement : Package an Application
ApiManagement -> Kubernetes : Get the Application Object
ApiManagement <- Kubernetes
ApiManagement -> Kubernetes : Annotate the Application Object with Packaging
ApiManagement <- Kubernetes
ApiManagement -> Kubernetes : Get Status of the Application
ApiManagement <- Kubernetes
ApiManagement -> Admin : Return current status
@enduml